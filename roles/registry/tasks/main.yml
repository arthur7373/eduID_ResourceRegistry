- name: Install MySQL
  apt: pkg=mysql-server update_cache=yes cache_valid_time=36000

- name: Install PHP and modules
  apt: pkg={{ item }} update_cache=yes cache_valid_time=36000
  with_items:
    - php5
    - php5-apcu
    - php5-cli
    - php5-curl
    - php5-mssql
    - php5-mcrypt
    - php5-memcached

- name: Install Zip
  apt: pkg=zip update_cache=yes cache_valid_time=36000


- name: Install memcached
  apt: pkg=memcached update_cache=yes cache_valid_time=36000

- name: Install apache2 and its modules
  apt: pkg=apache2 update_cache=yes cache_valid_time=36000

- name: Enable Apache Rewrite modules
  command: a2enmod rewrite
  notify: restart apache

- name: Enable Apache unique_id modules
  command: a2enmod unique_id ssl
  notify: restart apache

- name: Copy apache2 config file
  template: >
    src=apache2.conf.j2
    dest=/etc/apache2/sites-available/{{ fqdn }}.conf
  notify: restart apache

- name: Disable default configuration
  command: a2dissite 000-default
  notify: restart apache

- name: Enable IdP configuration
  command: a2ensite {{ fqdn }}
  notify: restart apache


- name: Copy php.ini
  copy: >
    src=php.ini
    dest=/etc/php5/apache2/php.ini
  notify: restart apache



- name: Create download directory
  file: >
    path=/usr/local/dist
    state=directory

# CodeIgniter

- name: Download CodeIgniter v3
  get_url: >
    url=https://github.com/bcit-ci/CodeIgniter/archive/{{ codeigniter_version }}.zip
    dest=/usr/local/dist/

- name: Extract CodeIgniter
  unarchive: >
    src=/usr/local/dist/CodeIgniter-{{ codeigniter_version }}.zip
    dest=/opt/
    copy=no

- name: Copy CodeIgniter config
  template: >
    src=codeigniter_config.php.j2
    dest=/opt/CodeIgniter-{{ codeigniter_version }}/application/config/config.php


# Composer

- name: Download Composer
  shell: php -r "readfile('https://getcomposer.org/installer');" > /usr/local/dist/composer-setup.php

- name: Verify Composer
  command: php -r "if (hash('SHA384', file_get_contents('/usr/local/dist/composer-setup.php')) === '41e71d86b40f28e771d4bb662b997f79625196afcca95a5abf44391188c695c6c1456e16154c75a211d238cc3bc5cb47') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

- name: Run Composer Installer
  command: php /usr/local/dist/composer-setup.php

- name: Remove Composer Installer
  command: php -r "unlink('/usr/local/dist/composer-setup.php');"

# Download Jagger

- name: Download Jagger
  get_url: >
    url=https://github.com/Edugate/Jagger/archive/1.x-stable.zip
    dest=/usr/local/dist/

- name: Extract Jagger
  unarchive: >
    src=/usr/local/dist/Jagger-1.x-stable.zip
    dest=/var/www
    copy=no

- name: Move extracted directory
  command: mv /var/www/Jagger-1.x-stable /var/www/rr3 creates=/var/www/rr3 \



# - name: Copy apache2 config file
#   template: >
#     src=templates/apache2.conf.j2
#     dest=/etc/apache2/sites-available/{{ fqdn }}.conf
#   notify: restart apache

# - name: Disable default configuration
#   command: a2dissite 000-default
#   notify: restart apache

# - name: Enable IdP configuration
#   command: a2ensite {{ fqdn }}
#   notify: restart apache

# - name: Copy TLS key
#   copy: >
#     src=files/{{ fqdn }}.key
#     dest={{ certificate_key_path }}
#     owner=root
#     group=ssl-cert
#     mode=0600
#   notify: restart apache

# - name: Copy TLS certificate
#   copy: >
#     src=files/{{ fqdn }}.crt
#     dest={{ certificate_cert_path }}
#   notify: restart apache

# - name: Enable SSL and AJP Proxy modules
#   command: a2enmod ssl proxy_ajp rewrite
#   notify: restart apache
